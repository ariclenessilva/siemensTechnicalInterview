services:
  producer-live-train:
    container_name: producer-live-train
    build:
      context: .
    command: /bin/sh -c 'python producer.py'
    depends_on:
      - broker
    volumes:
      - C:\Users\Ariclenes Silva\Documents\mountdocker:/tmp

  consumer-live-train:
    container_name: consumer-live-train
    build:
      context: .
    command: /bin/sh -c 'python consumer.py'
    depends_on:
      - broker
      - producer-live-train
    volumes:
      - C:\Users\Ariclenes Silva\Documents\mountdocker:/tmp

  broker:
    image: apache/kafka:latest
    container_name: broker
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://broker:9092,CONTROLLER://localhost:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3
      KAFKA_MESSAGE_MAX_BYTES: 20971520  # 20MB
      KAFKA_REPLICA_FETCH_MAX_BYTES: 20971520  # 20MB
      KAFKA_CREATE_TOPICS: "live_train_data_source:1:1,live_train_data_sink:1:1"
